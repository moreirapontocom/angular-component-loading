{"version":3,"sources":["../../../../projects/criarti/loading/src/lib/loading.service.ts","../../../../projects/criarti/loading/src/lib/loading.component.ts","../../../../projects/criarti/loading/src/lib/loading.module.ts"],"names":["Injectable","args","providedIn","LoadingComponent","prototype","ngOnChanges","changes","loading","this","_loading","currentValue","ngOnInit","undefined","button","_parent","page","sm","_size","md","lg","light","_colorScheme","_content","content","Component","selector","template","Input","NgModule","declarations","imports","CommonModule","exports"],"mappings":"gsBAOE,4HALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECId,SAAAC,YAoBEA,EAAAC,UAAAC,YAAA,SAAYC,GACNA,EAAQC,UACVC,KAAKC,SAAoC,kBAAjBD,KAAKD,QAC3BC,KAAKD,UACJD,EAAQC,QAAQG,cAAgB,KAUvCP,EAAAC,UAAAO,SAAA,gBAGsBC,IAAhBJ,KAAKK,OAAsBL,KAAKM,QAAU,UACrCN,KAAKO,KAAoBP,KAAKM,QAAU,aAIjCF,IAAZJ,KAAKQ,GAAkBR,KAAKS,MAAQ,aACnBL,IAAZJ,KAAKU,GAAkBV,KAAKS,MAAQ,cACxBL,IAAZJ,KAAKW,GAAkBX,KAAKS,MAAQ,QACxCT,KAAKS,MAA0B,SAAjBT,KAAKM,QAAsB,SAAW,aAGtCF,IAAfJ,KAAKY,MAAqBZ,KAAKa,aAAe,OAC7Cb,KAAKa,aAAe,QAGzBb,KAAKc,cAA6BV,IAAjBJ,KAAKe,QAAyB,YAAcf,KAAKe,kCAzDrEC,EAAAA,UAASvB,KAAA,CAAC,CACTwB,SAAU,aACVC,SAAA,+1BAMCC,EAAAA,kBACAA,EAAAA,kBACAA,EAAAA,qBAGAA,EAAAA,sBAGAA,EAAAA,oBACAA,EAAAA,uBAGAA,EAAAA,uBAGAA,EAAAA,eChBH,iCALCC,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,aAAc,CAAC1B,GACf2B,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC7B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor() { }\n}\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'ls-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  // _size | Default: md\n  @Input() sm;\n  @Input() md;\n  @Input() lg;\n\n  // _colorScheme | Default: dark\n  @Input() light;\n\n  // _parent | Default: page\n  @Input() button;\n  @Input() page;\n\n  // _loading\n  @Input() loading;\n\n  // _content | Default: 'bootstrap'\n  @Input() content;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.loading) {\n      this._loading = (typeof this.loading === 'boolean') ? \n        this.loading : \n        (changes.loading.currentValue >= 1) ? false : true;\n    }\n  }\n\n  _size: string;\n  _colorScheme: string;\n  _parent: string;\n  _loading: boolean;\n  _content: string;\n\n  ngOnInit(): void {\n\n    // Parent\n    if (this.button !== undefined) this._parent = 'button'\n    else if (this.page !== undefined) this._parent = 'page'\n    else this._parent = 'page'\n\n    // Size\n    if (this.sm !== undefined) this._size = 'small'\n    else if (this.md !== undefined) this._size = 'medium'\n    else if (this.lg !== undefined) this._size = 'large'\n    else this._size = (this._parent === 'page') ? 'medium' : 'small'\n\n    // Color\n    if (this.light === undefined) this._colorScheme = 'dark'\n    else this._colorScheme = 'light'\n\n    // Content\n    this._content = (this.content === undefined) ? 'bootstrap' : this.content;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoadingComponent } from './loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent]\n})\nexport class LoadingModule { }\n"]}